name: pull_request
run-name: Pull Request

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    
    
# Prevent running concurrently
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  #Check format of code
  format:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref || github.ref }}
      - name: Get changed files
        id: changed_files
        run: |
          changed_files=$(gh pr diff ${{ github.event.number }} --name-only | xargs)
      - name: Format code
        # Lints and formats are called only against the changed files, because other
        # files must have come from master
        run: bash deploy/format.sh ${{ steps.changed_files.outputs.changed_files }}
        
  # Check code for linting errors
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         ref: ${{ github.head_ref || github.ref }}
  #     - name: Get changed files
  #       id: changed_files
  #       run: |
  #         changed_files=$(gh pr diff ${{ github.event.number }} --name-only | xargs)
  #     - name: Run linter
  #       # Lints and formats are called only against the changed files, because other
  #       # files must have come from master
  #       run: bash deploy/lint.sh ${{ steps.changed_files.outputs.changed_files }}

  # # Run tests
  # test:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, macos-latest, windows-latest]
  #       python-version: [3.8, 3.9, "3.10", "3.11"]
  #       poetry-version: ["1.3.1"]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     #install python
  #     - uses: actions/checkout@v2
  #       with:
  #         ref: ${{ github.head_ref || github.ref }}

  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Upgrade pip
  #       run: python -m pip install --upgrade pip
  #     - name: Setup Poetry
  #       uses: abatilo/actions-poetry@v2
  #       with:
  #         poetry-version: ${{ matrix.poetry-version }}
  #     - name: Install dependencies
  #       run: |
  #         poetry install --no-interaction --no-root --all-extras -vvv
  #         pip install wheel
  #         pip install --upgrade setuptools
  #         pip install --editable ".[test,ml,medical,dev]"
  #         pip install pytest
  #     - name: Run tests
  #       run: |
  #         pytest --junitxml=${{ github.workspace }}/os-${{ matrix.os }}-py${{ matrix.python-version}}-poetry${{ matrix.poetry-version }}-test-results.xml --cov=src --cov-report=xml --cov-report=term-missing --cov-fail-under=100
  #     - name: Publish test results
  #       uses: EnricoMi/publish-unit-test-result-action@v2
  #       # Only run on windows
  #       if: matrix.os == 'windows-latest'
  #       with:
  #         files: ${GITHUB_WORKSPACE}/**/*test-results.xml
                    