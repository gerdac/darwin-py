name: release
run-name: Release

on:
  release:
    types: [created]

  workflow_call:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - run: pip install pip --upgrade
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.3.1"

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root --all-extras -vvv
          poetry build

      - name: Publish on pypi.org
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          POETRY_HTTP_BASIC_PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          POETRY_HTTP_BASIC_PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          # poetry publish
          echo "Publishing to pypi.org - Emulated"

      - name: Publish on test.pypi.org
        # if release is a prerelease, publish to test.pypi.org
        if: startsWith(github.ref, 'refs/tags/test-')
        env:
          POETRY_HTTP_BASIC_PYPI_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
          POETRY_HTTP_BASIC_PYPI_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
        run: |
          # poetry publish
          echo "Publishing to test.pypi.org - Emulated"
